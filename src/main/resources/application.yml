server:
  port: 8085

spring:
  application:
    name: train

  datasource:
    url: jdbc:postgresql://localhost:5432/train
    username: postgres
    password: 123
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:9072/realms/oauth-train-realm
          jwk-set-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs

  mail:
    host: smtp.gmail.com
    port: 465
    protocol: smtps
    username: samargaiche82@gmail.com
    password: rqpz lqrf squo mahc

    properties:
      mail:
        transport:
          protocol: smtps
        smtps:
          auth: true
          starttls:
            enable: true
          timeout: 8000

  cloud:
    compatibility-verifier:
      enabled: false
    config:
      enabled: true
      uri: http://localhost:8880

  config:
    import: optional:configserver:http://localhost:8880/

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 10
    lease-expiration-duration-in-seconds: 30

jwt:
  auth:
    converter:
      resource-id: sahar
      principle-attribute: preferred_username

keycloak:
  client-id: sahar
  client-secret: OZFcXNZcEhsMgYfQf8eATx4HhKX3b7gm
  auth-server-url: http://localhost:9072/realms/oauth-train-realm

email:
  address: samargaiche82@gmail.com
  support: contact@lms.com

message:
  mail:
    verification: Thank you for creating
